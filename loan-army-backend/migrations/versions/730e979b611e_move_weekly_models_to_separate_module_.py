"""move weekly models to separate module (no schema changes expected)

Revision ID: 730e979b611e
Revises: a6b48cba84ca
Create Date: 2025-08-06 20:10:08.316786

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '730e979b611e'
down_revision = 'a6b48cba84ca'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weekly_loan_appearances')
    op.drop_table('weekly_loan_reports')
    op.drop_table('fixtures')
    op.drop_table('fixture_player_stats')
    op.drop_table('fixture_team_stats')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fixture_team_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fixture_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('team_api_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stats_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fixture_id'], ['fixtures.id'], name=op.f('fixture_team_stats_fixture_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('fixture_team_stats_pkey')),
    sa.UniqueConstraint('fixture_id', 'team_api_id', name=op.f('uq_fixture_team'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('fixture_player_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fixture_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_api_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('team_api_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('goals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assists', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yellows', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('raw_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fixture_id'], ['fixtures.id'], name=op.f('fixture_player_stats_fixture_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('fixture_player_stats_pkey')),
    sa.UniqueConstraint('fixture_id', 'player_api_id', name=op.f('uq_fixture_player'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('fixtures',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('fixtures_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('fixture_id_api', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_utc', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('season', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('competition_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('home_team_api_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('away_team_api_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('home_goals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('away_goals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('raw_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='fixtures_pkey'),
    sa.UniqueConstraint('fixture_id_api', name='fixtures_fixture_id_api_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('weekly_loan_reports',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('weekly_loan_reports_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('parent_team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_team_api_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('season', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('week_start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('week_end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('include_team_stats', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('generated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('meta_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_team_id'], ['teams.id'], name='weekly_loan_reports_parent_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='weekly_loan_reports_pkey'),
    sa.UniqueConstraint('parent_team_id', 'week_start_date', 'week_end_date', name='uq_weekly_parent_week', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('weekly_loan_appearances',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('weekly_report_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('loaned_player_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_api_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fixture_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('team_api_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('appeared', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('goals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assists', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('yellows', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fixture_id'], ['fixtures.id'], name=op.f('weekly_loan_appearances_fixture_id_fkey')),
    sa.ForeignKeyConstraint(['loaned_player_id'], ['loaned_players.id'], name=op.f('weekly_loan_appearances_loaned_player_id_fkey')),
    sa.ForeignKeyConstraint(['weekly_report_id'], ['weekly_loan_reports.id'], name=op.f('weekly_loan_appearances_weekly_report_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('weekly_loan_appearances_pkey')),
    sa.UniqueConstraint('weekly_report_id', 'loaned_player_id', 'fixture_id', name=op.f('uq_week_player_fixture'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
